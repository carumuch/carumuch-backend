server:
  host: ${HOST_API_ADDRESS}
  port: 8080
cors:
  allow:
    origins: ${FRONTEND_ADDRESS}
# DB
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_ADDRESS}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  output:
    ansi:
      enabled: always
  data:
    redis:
      host: ${REDIS_ADDRESS}
      port: ${REDIS_PORT}
  # OAUTH2
  jwt:
    secret: ${JWT_KEY}
    refresh-token-validity-in-seconds: ${REFRESH_TOKEN_VALID_TIME}
    access-token-validity-in-seconds: ${ACCESS_TOKEN_VALID_TIME}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-authentication-method: client_secret_post
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: name, email
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: profile, email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  # S3
  cloud:
    aws:
      credentials:
        accessKey: ${AWS_CREDENTIALS_KEY}
        secretKey: ${AWS_CREDENTIALS_SECRET_KEY}
      s3:
        bucket: ${S3_BUCKET}
      region:
        static: ${S3_REGION}
      stack:
        auto: false
      cloudfront:
        domainName: ${CLOUDFRONT_NAME}
  # mail
  mail:
    host: smtp.${MAIL_HOST_ADDRESS}
    port: ${MAIL_PORT}
    username: ${MAIL_ADDRESS}
    password: ${MAIL_PASSWORD}
    protocol: smtps
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
# Swagger springdoc-ui
springdoc:
  packages-to-scan: ${SWAGGER_SCAN}
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: ${SWAGGER_PATH}
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  cache:
    disabled: true
logging.level:
  org.hibernate.SQL: debug
